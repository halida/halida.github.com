---
layout: post
title: 如何学习计算机科学
date: 2011-09-06 13:58:44 +0800

comments: true
categories: 
---

![image](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-171-software-engineering-for-web-applications-fall-2003/6-171f03.jpg)

在
[计算机领域学习路线图](http://blog.linjunhalida.com/blog/CS-roadmap/)
里面, 我们知道了需要做的事情, 那么我们如何开始呢?
这里面是一个总的路线规划.

入门
------------------------------

首先, 我们需要学会编程, 以及对应的思考和解决问题的方式. 所以,
我们需要完成:
[6.00](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00-introduction-to-computer-science-and-programming-fall-2008)
入门课.

这里需要重点提示一下: 公开课只是看看是不行的. 需要做的事情是:
按照公开课里面的calendar, 听课, 看书, 做习题. 安排好时间,
保证能够坚持下去. 如果个人的意志力不够, 可以找人帮忙督导.
这样才能确保学好里面的内容.

6.00学完后, 基本上能够用python写代码了. 这个时候, 2条线并行:

-   学习基础. 按顺序学习: 6.002 计算机组成原理, 6.046J 算法基础, 6.828
    操作系统, 6.035 编译原理, 这些是我们的基础知识. 可能你觉得枯燥,
    但是这些课程学到的东西, 是基础. 它们决定你能走多远.
-   开始项目. 我建议: 看6.171, 开始学习如何做一个网站.
    在这个课程中学习使用linux系统, 学习web, 做网站. 当然,
    其他类型的项目也可以, 不过需要学过了部分基础内容才能够写代码.
    那个比较久了. 所以我建议从入门比较简单的web方面开始.

然后随着基础课程的推进, 不断根据基础课程做对应的项目.

-   学到计算机组成原理, 就做后面的实验, 设计自己的CPU.
-   学到算法, 就去优化常见的库程序.
-   学到操作系统, 就去自己写一个操作系统的模块.
-   学到编译原理, 就自己设计一个语言.

然后, 经过了这些过程, 你现在需要自己计划一个项目, 真正能够有用的项目,
然后投入精力完成它, 作为自己的毕业设计.