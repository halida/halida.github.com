
---
layout: post
title: _如何用mercurial做开发
date: 2010-12-23 10:02:28 +0800

comments: true
categories: 
---

现在关于如何使用DVS工具的文章已经很多了, 但是在更高程度上看,
如何理顺整个开发过程的文章还是比较缺. 根据
[这篇文章](http://www.jeffkit.info/2010/12/885/) 里面,
很多人使用版本管控工具, 只是把它当作一个代码备份工具来使用.

虽然我也不是什么资深人员, 但是我也整理一下自己使用版本管控工具的经验,
方便后来人, 也是对自己经验的一个整理.

作为版本管控工具, 我们需要它们能够做到以下功能:

-   能够保存代码, 防止代码遗失
-   能够记录变更, 出现问题的时候可以根据历史记录快速获取问题点.
-   根据使用场景维护多个版本的代码, 以及多个版本之间能够同步指定代码
-   多人协作的时候能够做到每个人能够专心开发自己的功能,
    并且代码能够顺利整合

现在比较普遍的最佳实践有:

-   采用开发版本和发布版本2个分支. 平时在开发版本上面干活, 确认稳定后,
    才整理到发布版本上面去, 发布版本用来做bugfix.
-   主代码库 + 每个程序员本地代码库, 程序员本地commit,
    当一个功能完成的时候, 才push到主代码库中去.